
HTMLOListElement

HTMLOListElement
reversed	boolean	The reversed, start, and type IDL attributes must reflect the respective content attributes of the same name. The start IDL attribute has the same default as its content attribute.
start	long	The reversed, start, and type IDL attributes must reflect the respective content attributes of the same name. The start IDL attribute has the same default as its content attribute.
type	DOMString	The reversed, start, and type IDL attributes must reflect the respective content attributes of the same name. The start IDL attribute has the same default as its content attribute.

HTMLOptGroupElement

HTMLOptGroupElement
disabled	boolean	The disabled and label attributes must reflect the respective content attributes of the same name.
label	DOMString	The disabled and label attributes must reflect the respective content attributes of the same name.

HTMLOptionElement

HTMLOptionElement
defaultSelected	boolean	The disabled IDL attribute must reflect the content attribute of the same name. The defaultSelected IDL attribute must reflect the selected content attribute.
disabled	boolean	The disabled IDL attribute must reflect the content attribute of the same name. The defaultSelected IDL attribute must reflect the selected content attribute.
form	HTMLFormElement?	The form IDL attribute's behavior depends on whether the option element is in a select element or not. If the option has a select element as its parent, or has an optgroup element as its parent and that optgroup element has a select element as its parent, then the form IDL attribute must return the same value as the form IDL attribute on that select element.
index	long	The index IDL attribute must return the element's index.
label	DOMString	The label IDL attribute, on getting, must return the element's label. On setting, the element's label content attribute must be set to the new value.
selected	boolean	The selected IDL attribute, on getting, must return true if the element's selectedness is true, and false otherwise. On setting, it must set the element's selectedness to the new value, set its dirtiness to true, and then cause the element to ask for a reset.
text	DOMString	The text IDL attribute, on getting, must return the result of stripping and collapsing whitespace from the concatenation of data of all the Text node descendants of the option element, in tree order, excluding any that are descendants of descendants of the option element that are themselves script elements in the HTML namespace or script elements in the SVG namespace.
value	DOMString	The value IDL attribute, on getting, must return the element's value. On setting, the element's value content attribute must be set to the new value.

HTMLOutputElement

HTMLOutputElement
defaultValue	DOMString	The defaultValue IDL attribute, on getting, must return the element's default value. On setting, the attribute must set the element's default value, and, if the element's value mode flag is in the mode default, set the element's textContent IDL attribute as well.
form	HTMLFormElement?	Reassociateable form-associated elements have a form IDL attribute, which, on getting, must return the element's form owner, or null if there isn't one.
htmlFor	DOMSettableTokenList	The htmlFor IDL attribute must reflect the for content attribute.
labels	NodeList	Labelable elements have a NodeList object associated with them that represents the list of label elements, in tree order, whose labeled control is the element in question. The labels IDL attribute of labelable elements, on getting, must return that NodeList object.
name	DOMString	The name IDL attribute must reflect the name content attribute.
type	DOMString	The type attribute must return the string "output".
validationMessage	DOMString	The validationMessage attribute must return the empty string if the element is not a candidate for constraint validation or if it is one but it satisfies its constraints; otherwise, it must return a suitably localized message that the user agent would show the user if this were the only form control with a validity constraint problem.
validity	ValidityState	The validity attribute must return a ValidityState object that represents the validity states of the element. This object is live, and the same object must be returned each time the element's validity attribute is retrieved.
value	DOMString	The value IDL attribute must act like the element's textContent IDL attribute, except that on setting, in addition, before the child nodes are changed, the element's value mode flag must be set to value.
willValidate	boolean	The willValidate attribute must return true if an element is a candidate for constraint validation, and false otherwise (i.e. false if any conditions are barring it from constraint validation).
checkValidity()	boolean	When the checkValidity() method is invoked, if the element is a candidate for constraint validation and does not satisfy its constraints, the user agent must fire a simple event named invalid that is cancelable (but in this case has no default action) at the element and return false.
reportValidity()	boolean	When the reportValidity() method is invoked, if the element is a candidate for constraint validation and does not satisfy its constraints, the user agent must: fire a simple event named invalid that is cancelable at the element, and if that event is not canceled, report the problems with the constraints of that element to the user; then, return false.
setCustomValidity(DOMString error)	void	The setCustomValidity(message), when invoked, must set the custom validity error message to the value of the given message argument.

HTMLParagraphElement

HTMLParamElement

HTMLParamElement
name	DOMString	The IDL attributes name and value must both reflect the respective content attributes of the same name.
value	DOMString	The IDL attributes name and value must both reflect the respective content attributes of the same name.

HTMLPreElement

HTMLProgressElement

HTMLProgressElement
labels	NodeList	Labelable elements have a NodeList object associated with them that represents the list of label elements, in tree order, whose labeled control is the element in question. The labels IDL attribute of labelable elements, on getting, must return that NodeList object.
max	double	The max IDL attribute must reflect the content attribute of the same name, limited to numbers greater than zero. The default value for max is 1.0.
position	double	If the progress bar is an indeterminate progress bar, then the position IDL attribute must return âˆ’1. Otherwise, it must return the result of dividing the current value by the maximum value.
value	double	If the progress bar is an indeterminate progress bar, then the value IDL attribute, on getting, must return 0. Otherwise, it must return the current value. On setting, the given value must be converted to the best representation of the number as a floating-point number and then the value content attribute must be set to that string.

HTMLQuoteElement

HTMLQuoteElement
cite	DOMString	The cite IDL attribute must reflect the element's cite content attribute.

HTMLScriptElement

HTMLScriptElement
async	boolean	The async IDL attribute controls whether the element will execute asynchronously or not. If the element's "force-async" flag is set, then, on getting, the async IDL attribute must return true, and on setting, the "force-async" flag must first be unset, and then the content attribute must be removed if the IDL attribute's new value is false, and must be set to the empty string if the IDL attribute's new value is true.
charset	DOMString	The IDL attributes src, type, charset, defer, each must reflect the respective content attributes of the same name.
crossOrigin	DOMString	The crossOrigin IDL attribute must reflect the crossorigin content attribute, limited to only known values.
defer	boolean	The IDL attributes src, type, charset, defer, each must reflect the respective content attributes of the same name.
src	DOMString	The IDL attributes src, type, charset, defer, each must reflect the respective content attributes of the same name.
text	DOMString	The IDL attribute text must return a concatenation of the contents of all the Text nodes that are children of the script element (ignoring any other nodes such as comments or elements), in tree order. On setting, it must act the same way as the textContent IDL attribute.
type	DOMString	The IDL attributes src, type, charset, defer, each must reflect the respective content attributes of the same name.

HTMLSelectElement

HTMLSelectElement
autofocus	boolean	The autofocus IDL attribute must reflect the content attribute of the same name.
disabled	boolean	The disabled IDL attribute must reflect the disabled content attribute.
form	HTMLFormElement?	Reassociateable form-associated elements have a form IDL attribute, which, on getting, must return the element's form owner, or null if there isn't one.
labels	NodeList	Labelable elements have a NodeList object associated with them that represents the list of label elements, in tree order, whose labeled control is the element in question. The labels IDL attribute of labelable elements, on getting, must return that NodeList object.
length	unsigned long	The length IDL attribute must return the number of nodes represented by the options collection. On setting, it must act like the attribute of the same name on the options collection.
multiple	boolean	The multiple, required, and size IDL attributes must reflect the respective content attributes of the same name. The size IDL attribute has a default value of zero.
name	DOMString	The name IDL attribute must reflect the name content attribute.
options	HTMLOptionsCollection	The options IDL attribute must return an HTMLOptionsCollection rooted at the select node, whose filter matches the elements in the list of options.
required	boolean	The multiple, required, and size IDL attributes must reflect the respective content attributes of the same name. The size IDL attribute has a default value of zero.
selectedIndex	long	The selectedIndex IDL attribute, on getting, must return the index of the first option element in the list of options in tree order that has its selectedness set to true, if any. If there isn't one, then it must return âˆ’1.
selectedOptions	HTMLCollection	The selectedOptions IDL attribute must return an HTMLCollection rooted at the select node, whose filter matches the elements in the list of options that have their selectedness set to true.
size	unsigned long	The multiple, required, and size IDL attributes must reflect the respective content attributes of the same name. The size IDL attribute has a default value of zero.
type	DOMString	The type IDL attribute, on getting, must return the string "select-one" if the multiple attribute is absent, and the string "select-multiple" if the multiple attribute is present.
validationMessage	DOMString	The validationMessage attribute must return the empty string if the element is not a candidate for constraint validation or if it is one but it satisfies its constraints; otherwise, it must return a suitably localized message that the user agent would show the user if this were the only form control with a validity constraint problem.
validity	ValidityState	The validity attribute must return a ValidityState object that represents the validity states of the element. This object is live, and the same object must be returned each time the element's validity attribute is retrieved.
value	DOMString	The value IDL attribute, on getting, must return the value of the first option element in the list of options in tree order that has its selectedness set to true, if any. If there isn't one, then it must return the empty string.
willValidate	boolean	The willValidate attribute must return true if an element is a candidate for constraint validation, and false otherwise (i.e. false if any conditions are barring it from constraint validation).
add((HTMLOptionElement or HTMLOptGroupElement) element, optional (HTMLElement or long) before)	void	Similarly, the add() method must act like its namesake method on that same options collection.
checkValidity()	boolean	When the checkValidity() method is invoked, if the element is a candidate for constraint validation and does not satisfy its constraints, the user agent must fire a simple event named invalid that is cancelable (but in this case has no default action) at the element and return false.
item(unsigned long index)	Element?	The item(index) method must return the value returned by the method of the same name on the options collection, when invoked with the same argument.
namedItem(DOMString name)	HTMLOptionElement?	The namedItem(name) method must return the value returned by the method of the same name on the options collection, when invoked with the same argument.
remove(optional long index)	void	The remove() method must act like its namesake method on that same options collection when it has arguments, and like its namesake method on the ChildNode interface implemented by the HTMLSelectElement ancestor interface Element when it has no arguments.
reportValidity()	boolean	When the reportValidity() method is invoked, if the element is a candidate for constraint validation and does not satisfy its constraints, the user agent must: fire a simple event named invalid that is cancelable at the element, and if that event is not canceled, report the problems with the constraints of that element to the user; then, return false.
setCustomValidity(DOMString error)	void	The setCustomValidity(message), when invoked, must set the custom validity error message to the value of the given message argument.
setter creator(unsigned long index, HTMLOptionElement? option)	void

HTMLShadowElement

HTMLShadowElement
olderShadowRoot	ShadowRoot?
boolean	ShadowRoot?

HTMLSourceElement

HTMLSourceElement
Must reflect the resetstyleinheritance attribute.	ShadowRoot?
src	ShadowRoot?	The IDL attributes src and type must reflect the respective content attributes of the same name.
type	DOMString	The IDL attributes src and type must reflect the respective content attributes of the same name.

HTMLSpanElement

HTMLStyleElement

HTMLStyleElement
media	DOMString	The media, type and scoped IDL attributes must reflect the respective content attributes of the same name.
scoped	boolean	The media, type and scoped IDL attributes must reflect the respective content attributes of the same name.
sheet	StyleSheet?	The sheet attribute must return the associated CSS style sheet for the node or null if there is no associated CSS style sheet.
type	DOMString	The media, type and scoped IDL attributes must reflect the respective content attributes of the same name.

HTMLTableCaptionElement

HTMLTableCellElement

HTMLTableCellElement
cellIndex	long	The cellIndex IDL attribute must, if the element has a parent tr element, return the index of the cell's element in the parent element's cells collection. If there is no such parent element, then the attribute must return âˆ’1.
colSpan	unsigned long	The colSpan IDL attribute must reflect the colspan content attribute. Its default value is 1.
headers	DOMSettableTokenList	The headers IDL attribute must reflect the content attribute of the same name.
rowSpan	unsigned long	The rowSpan IDL attribute must reflect the rowspan content attribute. Its default value is 1.

HTMLTableColElement

HTMLTableColElement
span	unsigned long	The span IDL attribute must reflect the content attribute of the same name. The value must be limited to only non-negative numbers greater than zero.

HTMLTableDataCellElement

HTMLTableElement

HTMLTableElement
caption	HTMLTableCaptionElement?	The caption IDL attribute must return, on getting, the first caption element child of the table element, if any, or null otherwise. On setting, the first caption element child of the table element, if any, must be removed, and the new value, if not null, must be inserted as the first node of the table element.
rows	HTMLCollection	The rows attribute must return an HTMLCollection rooted at the table node, whose filter matches only tr elements that are either children of the table element, or children of thead, tbody, or tfoot elements that are themselves children of the table element.
sortable	boolean	The IDL attribute sortable must reflect the sortable content attribute.
tBodies	HTMLCollection	The tBodies attribute must return an HTMLCollection rooted at the table node, whose filter matches only tbody elements that are children of the table element.
tFoot	HTMLTableSectionElement?	The tFoot IDL attribute must return, on getting, the first tfoot element child of the table element, if any, or null otherwise. On setting, if the new value is null or a tfoot element, the first tfoot element child of the table element, if any, must be removed, and the new value, if not null, must be inserted immediately before the first element in the table element that is neither a caption element, a colgroup element, nor a thead element, if any, or at the end of the table if there are no such elements.
tHead	HTMLTableSectionElement?	The tHead IDL attribute must return, on getting, the first thead element child of the table element, if any, or null otherwise. On setting, if the new value is null or a thead element, the first thead element child of the table element, if any, must be removed, and the new value, if not null, must be inserted immediately before the first element in the table element that is neither a caption element nor a colgroup element, if any, or at the end of the table if there are no such elements.
createCaption()	HTMLElement	The createCaption() method must return the first caption element child of the table element, if any; otherwise a new caption element must be created, inserted as the first node of the table element, and then returned.
createTBody()	HTMLElement	The createTBody() method must create a new tbody element, insert it immediately after the last tbody element child in the table element, if any, or at the end of the table element if the table element has no tbody element children, and then must return the new tbody element.
createTFoot()	HTMLElement	The createTFoot() method must return the first tfoot element child of the table element, if any; otherwise a new tfoot element must be created and inserted immediately before the first element in the table element that is neither a caption element, a colgroup element, nor a thead element, if any, or at the end of the table if there are no such elements, and then that new element must be returned.
createTHead()	HTMLElement	The createTHead() method must return the first thead element child of the table element, if any; otherwise a new thead element must be created and inserted immediately before the first element in the table element that is neither a caption element nor a colgroup element, if any, or at the end of the table if there are no such elements, and then that new element must be returned.
deleteCaption()	void	The deleteCaption() method must remove the first caption element child of the table element, if any.
deleteRow(long index)	void
deleteTFoot()	void	The deleteTFoot() method must remove the first tfoot element child of the table element, if any.
deleteTHead()	void	The deleteTHead() method must remove the first thead element child of the table element, if any.
insertRow(optional long index)	HTMLElement	The behavior of the insertRow(index) method depends on the state of the table.
stopSorting()	void	The table element's stopSorting() method, when invoked, must remove the sorted attribute of all the sorting-enabled th elements of the table element on which the method was invoked.

HTMLTableHeaderCellElement

HTMLTableHeaderCellElement
abbr	DOMString	The abbr and sorted IDL attributes must reflect the content attributes of the same name.
scope	DOMString	The scope IDL attribute must reflect the content attribute of the same name, limited to only known values.
sorted	DOMString	The abbr and sorted IDL attributes must reflect the content attributes of the same name.

HTMLTableRowElement

HTMLTableRowElement
cells	HTMLCollection	The cells attribute must return an HTMLCollection rooted at the tr element, whose filter matches only td and th elements that are children of the tr element.
rowIndex	long	The rowIndex attribute must, if the element has a parent table element, or a parent tbody, thead, or tfoot element and a grandparent table element, return the index of the tr element in that table element's rows collection. If there is no such table element, then the attribute must return âˆ’1.
sectionRowIndex	long	The sectionRowIndex attribute must, if the element has a parent table, tbody, thead, or tfoot element, return the index of the tr element in the parent element's rows collection (for tables, that's the HTMLTableElement.rows collection; for table sections, that's the HTMLTableRowElement.rows collection).
deleteCell(long index)	void	The deleteCell(index) method must remove the indexth element in the cells collection from its parent. If index is less than zero or greater than or equal to the number of elements in the cells collection, the method must instead throw an IndexSizeError exception.
insertCell(optional long index)	HTMLElement

HTMLTableSectionElement

HTMLTableSectionElement
rows	HTMLCollection	The rows attribute must return an HTMLCollection rooted at the element, whose filter matches only tr elements that are children of the element.
deleteRow(long index)	void	The deleteRow(index) method must remove the indexth element in the rows collection from its parent. If index is less than zero or greater than or equal to the number of elements in the rows collection, the method must instead throw an IndexSizeError exception.
insertRow(optional long index)	HTMLElement

HTMLTemplateElement

HTMLTemplateElement
content	DocumentFragment	The content IDL attribute must return the template element's template contents.

HTMLTextAreaElement

HTMLTextAreaElement
autocomplete	DOMString	The autocomplete IDL attribute, on getting, must return the element's IDL-exposed autofill value, and on setting, must reflect the content attribute of the same name.
autofocus	boolean	The autofocus IDL attribute must reflect the content attribute of the same name.
cols	unsigned long	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
defaultValue	DOMString	The defaultValue IDL attribute must act like the element's textContent IDL attribute.
dirName	DOMString	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
disabled	boolean	The disabled IDL attribute must reflect the disabled content attribute.
form	HTMLFormElement?	Reassociateable form-associated elements have a form IDL attribute, which, on getting, must return the element's form owner, or null if there isn't one.
inputMode	DOMString	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
labels	NodeList	Labelable elements have a NodeList object associated with them that represents the list of label elements, in tree order, whose labeled control is the element in question. The labels IDL attribute of labelable elements, on getting, must return that NodeList object.
maxLength	long	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
minLength	long	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
name	DOMString	The name IDL attribute must reflect the name content attribute.
placeholder	DOMString	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
readOnly	boolean	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
required	boolean	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
rows	unsigned long	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
selectionDirection	DOMString	The selectionDirection attribute must, on getting, return the string corresponding to the current selection direction: if the direction is forward, "forward"; if the direction is backward, "backward"; and otherwise, "none".
selectionEnd	unsigned long	The selectionEnd attribute must, on getting, return the offset (in logical order) to the character that immediately follows the end of the selection. If there is no selection, then it must return the offset (in logical order) to the character that immediately follows the text entry cursor.
selectionStart	unsigned long	The selectionStart attribute must, on getting, return the offset (in logical order) to the character that immediately follows the start of the selection. If there is no selection, then it must return the offset (in logical order) to the character that immediately follows the text entry cursor.
textLength	unsigned long	The textLength IDL attribute must return the code-unit length of the element's API value.
type	DOMString	The type IDL attribute must return the value "textarea".
validationMessage	DOMString	The validationMessage attribute must return the empty string if the element is not a candidate for constraint validation or if it is one but it satisfies its constraints; otherwise, it must return a suitably localized message that the user agent would show the user if this were the only form control with a validity constraint problem.
validity	ValidityState	The validity attribute must return a ValidityState object that represents the validity states of the element. This object is live, and the same object must be returned each time the element's validity attribute is retrieved.
value	DOMString	The value attribute must, on getting, return the element's API value; on setting, it must set the element's raw value to the new value, set the element's dirty value flag to true, and should then move the text entry cursor position to the end of the text field, unselecting any selected text and resetting the selection direction to none.
willValidate	boolean	The willValidate attribute must return true if an element is a candidate for constraint validation, and false otherwise (i.e. false if any conditions are barring it from constraint validation).
wrap	DOMString	The cols, placeholder, required, rows, and wrap attributes must reflect the respective content attributes of the same name. The cols and rows attributes are limited to only non-negative numbers greater than zero. The cols attribute's default value is 20.
checkValidity()	boolean	When the checkValidity() method is invoked, if the element is a candidate for constraint validation and does not satisfy its constraints, the user agent must fire a simple event named invalid that is cancelable (but in this case has no default action) at the element and return false.
reportValidity()	boolean	When the reportValidity() method is invoked, if the element is a candidate for constraint validation and does not satisfy its constraints, the user agent must: fire a simple event named invalid that is cancelable at the element, and if that event is not canceled, report the problems with the constraints of that element to the user; then, return false.
select()	void	The select() method must cause the contents of the text field to be fully selected, with the selection direction being none, if the platform support selections with the direction none, or otherwise forward. The user agent must then queue a task to fire a simple event that bubbles named select at the element, using the user interaction task source as the task source.
setCustomValidity(DOMString error)	void	The setCustomValidity(message), when invoked, must set the custom validity error message to the value of the given message argument.
setRangeText(DOMString replacement, optional unsigned long start, optional unsigned long end, optional SelectionMode selectionMode)	void
setSelectionRange(unsigned long start, unsigned long end, optional DOMString direction)	void	The setSelectionRange(start, end, direction) method must set the selection of the text field to the sequence of characters starting with the character at the startth position (in logical order) and ending with the character at the (end-1)th position. Arguments greater than the length of the value of the text field must be treated as pointing at the end of the text field.

HTMLTimeElement

HTMLTimeElement
dateTime	DOMString	The dateTime IDL attribute must reflect the element's datetime content attribute.

HTMLTitleElement

HTMLTitleElement
text	DOMString	The IDL attribute text must return a concatenation of the contents of all the Text nodes that are children of the title element (ignoring any other nodes such as comments or elements), in tree order. On setting, it must act the same way as the textContent IDL attribute.

HTMLTrackElement

HTMLTrackElement
ERROR = 3	const unsigned short	The text track failed to load state.
LOADED = 2	const unsigned short	The text track loaded state.
LOADING = 1	const unsigned short	The text track loading state.
NONE = 0	const unsigned short	The text track not loaded state.
default	boolean	The src, srclang, label, and default IDL attributes must reflect the respective content attributes of the same name. The kind IDL attribute must reflect the content attribute of the same name, limited to only known values.
kind	DOMString	The src, srclang, label, and default IDL attributes must reflect the respective content attributes of the same name. The kind IDL attribute must reflect the content attribute of the same name, limited to only known values.
label	DOMString	The src, srclang, label, and default IDL attributes must reflect the respective content attributes of the same name. The kind IDL attribute must reflect the content attribute of the same name, limited to only known values.
readyState	unsigned short
src	DOMString	The src, srclang, label, and default IDL attributes must reflect the respective content attributes of the same name. The kind IDL attribute must reflect the content attribute of the same name, limited to only known values.
srclang	DOMString	The src, srclang, label, and default IDL attributes must reflect the respective content attributes of the same name. The kind IDL attribute must reflect the content attribute of the same name, limited to only known values.
track	TextTrack	The track IDL attribute must, on getting, return the track element's text track's corresponding TextTrack object.

HTMLUListElement

HTMLUnknownElement

HTMLVideoElement
height	unsigned long

HTMLVideoElement
poster	DOMString	The poster IDL attribute must reflect the poster content attribute.
videoHeight	unsigned long	The videoWidth IDL attribute must return the intrinsic width of the video in CSS pixels. The videoHeight IDL attribute must return the intrinsic height of the video in CSS pixels. If the element's readyState attribute is HAVE_NOTHING, then the attributes must return 0.
videoWidth	unsigned long	The videoWidth IDL attribute must return the intrinsic width of the video in CSS pixels. The videoHeight IDL attribute must return the intrinsic height of the video in CSS pixels. If the element's readyState attribute is HAVE_NOTHING, then the attributes must return 0.
width	unsigned long
